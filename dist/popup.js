(()=>{const t="ezproxy-dismissed-domains",e=document.getElementById("status"),n=document.getElementById("accessButton"),s=document.getElementById("resetDismissed");function a(t,s){e&&(e.textContent=t,e.className="status "+(s?"active":"inactive"),n&&(n.disabled=!s&&"Banner is currently dismissed for this domain"!==t))}document.addEventListener("DOMContentLoaded",(async()=>{try{a("Checking current page...",!1);const[e]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!e||!e.url)return void a("Could not access current tab",!1);const s=await async function(){try{const t=chrome.runtime.getURL("domain-list.json"),e=await fetch(t);if(!e.ok)throw new Error(`Failed to fetch domain list: ${e.status} ${e.statusText}`);const n=e.headers.get("content-type");!n||n.includes("application/json");const s=await e.json();return Array.isArray(s)?s:[]}catch(t){try{const t=(await chrome.storage.local.get("ezproxy-domain-list-backup"))["ezproxy-domain-list-backup"];return Array.isArray(t)?t:[]}catch(t){return[]}}}();if(!s||0===s.length)return void a("Domain list could not be loaded",!1);const i=new URL(e.url),o=await(await fetch(chrome.runtime.getURL("config.json"))).json(),r=o.ezproxyBaseUrl,c=o.libraryHelpUrl,d=o.secondaryHelpButtonText||"Info for this site";if(i.hostname.includes(r)){a("You are already on a proxied page.",!0),n.disabled=!1,n.textContent=d;const t=function(t,e){const n=t.replace("."+e,"").replace(/-/g,"."),s=n.split(".");return s.length<=2?n:s.slice(-2).join(".")}(i.hostname,r);let e=c;return e&&(e+=(e.includes("?")?"&":"?")+"q="+encodeURIComponent(t)),void(n.onclick=()=>{chrome.tabs.create({url:e}),window.close()})}if(!s.some((t=>{const e=i.hostname.endsWith(t)||i.hostname===t;return e})))return void a("Current page is not a known library resource",!1);const l=await chrome.storage.local.get(t),u=(l[t]||[]).find((t=>i.hostname.endsWith(t)||i.hostname===t));!!u?(a("Banner is currently dismissed for this domain",!1),n.disabled=!1,n.textContent="Show Banner Again",n.onclick=async()=>{const e=u||i.hostname;await async function(e){try{const s=(await chrome.storage.local.get(t))[t]||[];if(0===s.length)return void a("No dismissed domains found",!1);let i=[];if(s.forEach((t=>{const n=e.endsWith(t);(e===t||n)&&i.push(t)})),0===i.length)return void a("No matching domains found in dismissed list",!1);const o=s.filter((t=>!i.includes(t)));await chrome.storage.local.set({[t]:o});const[r]=await chrome.tabs.query({active:!0,currentWindow:!0});if(r&&r.id){try{await chrome.runtime.sendMessage({action:"updateIcon",tabId:r.id,isDismissed:!1})}catch(t){}a("Banner will show again on next visit",!0),n.disabled=!0,n.textContent="Access via EZProxy",await chrome.tabs.reload(r.id),window.close()}}catch(t){a("Error updating settings",!1)}}(e)}):(a("This page is a known library resource",!0),n.disabled=!1,n.onclick=()=>async function(t){try{const e=await(await fetch(chrome.runtime.getURL("config.json"))).json();let n=t;n.startsWith("http://")?n=n.substring(7):n.startsWith("https://")&&(n=n.substring(8));let s=e.ezproxyBaseUrl;s.endsWith("/")||(s=`${s}/`);const a=`${s}${n}`;await chrome.tabs.update({url:a}),window.close()}catch(t){a("Error redirecting to EZProxy",!1)}}(e.url))}catch(t){a("Error checking current page",!1)}})),s.addEventListener("click",(async()=>{if(confirm("Are you sure you want to reset all dismissed domains? This will re-enable the banner for all previously dismissed domains."))try{await chrome.storage.local.remove(t);await chrome.storage.local.get(t);a("Successfully reset all dismissed domains. Reloading page...",!0);const[e]=await chrome.tabs.query({active:!0,currentWindow:!0});if(e&&e.id){try{await chrome.runtime.sendMessage({action:"updateIcon",tabId:e.id,isDismissed:!1})}catch(t){}await chrome.tabs.reload(e.id)}const n=await chrome.tabs.query({});for(const t of n)if(t.id&&t.id!==(null==e?void 0:e.id))try{await chrome.runtime.sendMessage({action:"updateIcon",tabId:t.id,isDismissed:!1})}catch(t){}setTimeout((()=>{window.close()}),1e3)}catch(t){a("Error: "+(t.message||"Failed to reset domains"),!1),s.disabled=!1,s.textContent="Try Again"}}))})();
//# sourceMappingURL=popup.js.map